<!DOCTYPE HTML>
<html lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
<meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, viewport-fit=cover" />
<title>Nile Technologies</title>
<link rel="stylesheet" type="text/css" href="/styles/bootstrap.css">
<link rel="stylesheet" type="text/css" href="/styles/style.css">
<link href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,500,500i,700,700i,900,900i|Source+Sans+Pro:300,300i,400,400i,600,600i,700,700i,900,900i&display=swap" rel="stylesheet">
<link rel="stylesheet" type="text/css" href="fonts/fontawesome/css/all.min.css">
<link rel="manifest" href="_manifest.json" data-pwa-version="set_in_manifest_and_pwa_js">
	<link rel="icon" type="image/png" href="images/logo/nile-logo.png"/>
 <link rel="apple-touch-icon" sizes="180x180" href="images/logo/nile-logo.png">
	
	
	<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
	
	
	<style>.d-flex div h1{display: inline;}
		#satalite_img{width: 100%;}</style>
</head>
	
	
<body class="detect-theme" data-highlight="highlight-green-dark" data-gradient="body-default">
	
<div id="preloader"><div class="spinner-border color-green-dark" role="status"></div></div>
	
<div id="page">
		
	<div class="page-content header-clear-small">
	
	<form method ="get" action="/login">
		

		<div class="card card-style">
			<div class="content mb-0">
				<div class="mt-n2">
					<div class="divider-icon divider-margins bg-gray-dark mx-5 mt-5"><i class="fas fa-farm font-33 mt-n3 color-green-dark bg-theme"></i></div>
				</div>
				<h1 class="text-center font-24">Select the location of your farm</h1>
				<p class="text-center mt-n2 opacity-50 font-12">Scroll in/out until your full farm is in view.</p>
				<img id="satalite_img">
					
					<div style="height:100vw; width:100%"id="map"></div>

					
			</div>
			<br>
			<br>
			<input type="hidden" name="first" value="" size ="40"/>
			<button id= 'store_btn' type ="submit" class=" btn btn-full btn-xl shadow-large rounded-s text-uppercase font-900 bg-green-dark">Confirm Location</button>
			<br>
		</div>
	<form>

			
	</div>

	
	
	
	<!-- End of Page Content-->
	
</div>

<script
	  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDpbgp0DBCSEmr5yLxRxdOZZPncWHHKFMA&libraries=&v=weekly"
	  async
	></script>
<script type="text/javascript" src="/scripts/bootstrap.min.js"></script>
<script type="text/javascript" src="/scripts/custom.js"></script>
<script type="text/javascript" src="/scripts/jquery.js"></script>


<script>

var email = '{{ email }}'
var lat, lon;
	// Note: This example requires that you consent to location sharing when
	// prompted by your browser. If you see the error "The Geolocation service
	// failed.", it means you probably did not give permission for the browser to
	// locate you.
	let map, infoWindow;
	var bbox
	function initMap() {
	  map = new google.maps.Map(document.getElementById("map"), {
		center: { lat: lat, lng: lon },
		zoom: 15,
		mapTypeId: 'satellite'
	  });
	  
	  
	  
	  google.maps.event.addListener(map, "bounds_changed", function() {
		 // send the new bounds back to your server
		 
			points = [
					 [map.getBounds().getNorthEast().lng(),map.getBounds().getSouthWest().lat()],
					 [map.getBounds().getNorthEast().lng(),map.getBounds().getNorthEast().lat()],
					 [map.getBounds().getSouthWest().lng(),map.getBounds().getNorthEast().lat()],
					 [map.getBounds().getSouthWest().lng(),map.getBounds().getSouthWest().lat()]
					 ]

			mapBbox = [map.getBounds().getSouthWest().lng(), 
						map.getBounds().getSouthWest().lat(), 
						map.getBounds().getNorthEast().lng(),
						map.getBounds().getNorthEast().lat()]


		 document.getElementById('store_btn').onclick = function(){

			 data2send = [email,lat,lon,mapBbox,points]
			 new Promise((resolve, reject) => {
            	$.ajax({
                	dataType: "json",
                	url: '/createmap',
                	type: "POST",
					data: JSON.stringify(data2send),
                	success: resolve
            })
        });


		 }
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
	  });
	  infoWindow = new google.maps.InfoWindow();
	  const locationButton = document.createElement("button");
	  locationButton.textContent = "Pan to Current Location";
	  locationButton.classList.add("custom-map-control-button");
	  map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);
	  locationButton.addEventListener("click", () => {
		// Try HTML5 geolocation.
		if (navigator.geolocation) {
		  navigator.geolocation.getCurrentPosition(
			(position) => {
			  const pos = {
				lat: position.coords.latitude,
				lng: position.coords.longitude,
			  };
			  infoWindow.setPosition(pos);
			  infoWindow.setContent("Location found.");
			  infoWindow.open(map);
			  map.setCenter(pos);
			},
			() => {
			  handleLocationError(true, infoWindow, map.getCenter());
			}
		  );
		} else {
		  // Browser doesn't support Geolocation
		  handleLocationError(false, infoWindow, map.getCenter());
		}
	  });
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  getWeather()
	  
	  satalites()
	}

	function handleLocationError(browserHasGeolocation, infoWindow, pos) {
	  infoWindow.setPosition(pos);
	  infoWindow.setContent(
		browserHasGeolocation
		  ? "Error: The Geolocation service failed."
		  : "Error: Your browser doesn't support geolocation."
	  );
	  infoWindow.open(map);
	}


function doSomething(l1, l2){
	lat = l1
	lon = l2
	console.log(lat,lon)
	
	initMap()
}

function success(position) {
  doSomething(position.coords.latitude, position.coords.longitude);
}

function error() {
  alert('Sorry, no position available.');
}

const options = {
  enableHighAccuracy: true,
  maximumAge: 30000,
  timeout: 27000
};

const watchID = navigator.geolocation.watchPosition(success, error, options);






	</script>
</body>
